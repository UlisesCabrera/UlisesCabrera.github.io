angular.module("AboutMeModule",["chart.js"]),angular.module("FrontEndModule",[]),angular.module("FullStackModule",[]),angular.module("HomePageModule",[]),angular.module("MicroserviceModule",[]),angular.module("AboutMeModule").factory("aboutMeFactory",[function(){var e={name:"Ulises Cabrera",profile_picture:"images/Profile-Picture.png",aboutMe:"I am a motivated front-end developer with knowledge in Javascript, Jquery, bootstrap and the MEAN stack. I enjoy building new stuff and pushing my skills to their limits. I am hardworking and a fast learner with good communication skills and a strong design background.",projects:{projectsName:["Front-End","Full Stack","Microservices"],projectsCount:[17,5,5]},skills:[{name:"HTML5"},{name:"CSS"},{name:"Javascript"},{name:"Angular.js"},{name:"React.js"},{name:"Node.js"},{name:"Express.js"},{name:"MongoDB"},{name:"Git"},{name:"Bootstrap"},{name:"Photoshop"},{name:"HTML Emails"},{name:"LESS"},{name:"InDesign"},{name:"Knockout.js"},{name:"Jquery"}]},a=randomColor({count:e.skills.length,luminosity:"dark"});return a.forEach(function(a,t){e.skills[t].styleCSS={border:"1px solid "+a,color:a}}),e}]),angular.module("FrontEndModule").factory("frontEndFactory",[function(){var e={projects:[{name:"Recipe Box",description:"Simple App to store food recipes, built with React.js",image:{"background-image":"url(' images/frontEndProjects/recipe-box-project.jpg')"},source:"http://codepen.io/ulisescabrera/pen/zqxrXG/",live:"http://codepen.io/ulisescabrera/full/zqxrXG/",userStories:["I can see an index view where the names of all the recipes are visible.","I can click into any of those recipes to view it.","I can edit these recipes.","I can delete these recipes.","All new recipes I add are saved in my browser's local storage. If I refresh the page, these recipes will still be there."],school:"freeCodeCamp",date:"March 2016",primaryFramework:"React.js"},{name:"Camper Leaderboard",description:"Build Camper Leaderboard section.",image:{"background-image":"url(' images/frontEndProjects/camper-leaderboard-project.jpg')"},source:"http://codepen.io/ulisescabrera/pen/oxvdbL/",live:"http://codepen.io/ulisescabrera/full/oxvdbL/",userStories:["I can see a table of the Free Code Camp campers who've earned the most brownie points in the past 30 days.","I can see how many brownie points they've earned in the past 30 days, and how many they've earned total.","I can toggle between sorting the list by how many bronwie points they've earned in the past 30 days and by how many brownie points they've earned total."],school:"freeCodeCamp",date:"February 2016",primaryFramework:"React.js"},{name:"Markdown Previewer",description:"Live Markdown previewer, render HTML from Markdown on the fly.",image:{"background-image":"url(' images/frontEndProjects/markdown-previewer-project.jpg')"},source:"http://codepen.io/ulisescabrera/pen/vGBBKQ/",live:"http://codepen.io/ulisescabrera/full/vGBBKQ/",userStories:["I can type GitHub-flavored Markdown into a text area.","I can see a preview of the output of my markdown that is updated as I type."],school:"freeCodeCamp",date:"March 2016",primaryFramework:"React.js"},{name:"Simon Game",description:"Replica of the simon game that was popular in the 80's.",image:{"background-image":"url(' images/frontEndProjects/simon-game-project.jpg')"},source:"http://codepen.io/ulisescabrera/pen/QjoMVb",live:"http://codepen.io/ulisescabrera/full/QjoMVb/",userStories:["I am presented with a random series of button presses.","Each time I input a series of button presses correctly, I see the same series of button presses but with an additional step.","I hear a sound that corresponds to each button both when the series of button presses plays, and when I personally press a button.","If I press the wrong button, I am notified that I have done so, and that series of button presses starts again to remind me of the pattern so I can try again.","I can see how many steps are in the current series of button presses."," If I want to restart, I can hit a button to do so, and the game will return to a single step.","I can play in strict mode where if I get a button press wrong, it notifies me that I have done so, and the game restarts at a new random series of button presses.","I can win the game by getting a series of 20 steps correct. I am notified of my victory, then the game starts over."],school:"freeCodeCamp",date:"November 2015",primaryFramework:"Angular.js"},{name:"Tic Tac Toe Game",description:"Unbeatable Tic Tac Toe Game made with angular.js and using the minimax algorithm.",image:{"background-image":"url(' images/frontEndProjects/tictactoe-game-project.jpg')"},source:"http://codepen.io/ulisescabrera/pen/Xmyxxr",live:"http://codepen.io/ulisescabrera/full/Xmyxxr/",userStories:["I can play a game of Tic Tac Toe with the computer.","I can never actually win against the computer - at best I can tie.","My game will reset as soon as it's over so I can play again.","I can choose whether I want to play as X or O."],school:"freeCodeCamp",date:"November 2015",primaryFramework:"Angular.js"},{name:"Wikipidia Viewer",description:"A wikipidea app that lets you display search results made to the wiki API and also allow you to see random articles.",image:{"background-image":"url(' images/frontEndProjects/wikipidea-viewer-project.jpg')"},source:"http://codepen.io/ulisescabrera/pen/OyoRbp",live:"http://codepen.io/ulisescabrera/full/OyoRbp/",userStories:["I can search Wikipedia entries in a search box and see the resulting Wikipedia entries.","I can click a button to see a random Wikipedia entry."],school:"freeCodeCamp",date:"November 2015",primaryFramework:"Angular.js"},{name:"freeCodeCamp News",description:"Redesign the freeCodeCamp news section.",image:{"background-image":"url(' images/frontEndProjects/free-news-project.jpg')"},source:"http://codepen.io/ulisescabrera/pen/ojMzex",live:"http://codepen.io/ulisescabrera/full/ojMzex/",userStories:["I can browse recent posts from Camper News.","I can click on a post to be taken to the story's original URL.","I can see how many upvotes each story has."],school:"freeCodeCamp",date:"November 2015",primaryFramework:"Angular.js"},{name:"Twitchtv JSON API",description:"Created Interface to display data from the Twitchtv API.",image:{"background-image":"url(' images/frontEndProjects/twitch-viewer-project.jpg')"},source:"http://codepen.io/ulisescabrera/pen/meLWaG",live:"http://codepen.io/ulisescabrera/full/meLWaG/",userStories:["I can see whether Free Code Camp is currently streaming on Twitch.tv.","I can click the status output and be sent directly to the Free Code Camp's Twitch.tv channel.","if a Twitch user is currently streaming, I can see additional details about what they are streaming.","I will see a placeholder notification if a streamer has closed their Twitch account (or the account never existed). You can verify this works by adding brunofin and comster404 to your array of Twitch streamers."],school:"freeCodeCamp",date:"November 2015",primaryFramework:"Angular.js"},{name:"Local Weather App",description:"Local Weather app using angular.js and getting the data from the weather underground API.",image:{"background-image":"url(' images/frontEndProjects/weather-project.jpg')"},source:"http://codepen.io/ulisescabrera/pen/JYEgJW",live:"http://codepen.io/ulisescabrera/full/JYEgJW/",userStories:["I can see the weather in my current location.","I can see a different icon or background image (e.g. snowy mountain, hot desert) depending on the weather.","I can push a button to toggle between Fahrenheit and Celsius."],school:"freeCodeCamp",date:"November 2015",primaryFramework:"Angular.js"},{name:"Pomodoro Clock App",description:"Pomodoro clock app using angular.js, you can add to-dos, see how many pomodoros have you completed and set the length of each pomodoro.",image:{"background-image":"url(' images/frontEndProjects/pomodoro-project.jpg')"},source:"http://codepen.io/ulisescabrera/pen/vNWXpB",live:"http://codepen.io/ulisescabrera/full/vNWXpB/",userStories:["I can start a 25 minute pomodoro, and the timer will go off once 25 minutes has elapsed.","I can reset the clock for my next pomodoro.","I can customize the length of each pomodoro."],school:"freeCodeCamp",date:"October 2015",primaryFramework:"Angular.js"},{name:"Quote Generator App",description:"Generates random quotes and let you tweet them, built using knockout.js.",image:{"background-image":"url(' images/frontEndProjects/quote-generator-project.jpg')"},source:"http://codepen.io/ulisescabrera/pen/epgLgp",live:"http://codepen.io/ulisescabrera/full/epgLgp/",userStories:["I can click a button to show me a new random quote.","I can press a button to tweet out a quote."],school:"freeCodeCamp",date:"October 2015",primaryFramework:"Knockout.js"},{name:"Simple Calculator",description:"Simple Calculator built with angular.js.",image:{"background-image":"url(' images/frontEndProjects/calculator-project.jpg')"},source:"http://codepen.io/ulisescabrera/pen/qOoKmJ",live:"http://codepen.io/ulisescabrera/full/qOoKmJ/",userStories:["I can add, subtract, multiply and divide two numbers.","I can clear the input field with a clear button.","I can keep chaining mathematical operations together until I hit the equal button, and the calculator will tell me the correct output."],school:"freeCodeCamp",date:"October 2015",primaryFramework:"Angular.js"},{name:"Neighborhood Map",description:"A Neighborhood Map that displays info about local restaurants powered by Google Maps, Yelp and Flickr.  Built with knockout.js",image:{"background-image":"url(' images/frontEndProjects/map-neighb-project.jpg')"},source:"https://github.com/UlisesCabrera/frontend-nanodegree-neighborhood-map",live:"http://ulisescabrera.github.io/frontend-nanodegree-neighborhood-map/dist/",userStories:[],school:"Udacity",date:"August 2015",primaryFramework:"Knockout.js"}]};return e}]),angular.module("FullStackModule").factory("fullStackFactory",[function(){var e={projects:[{name:"Pinterest Clone",description:"It’s Pinterest clone app, built with the MEAN stack.  It let you login with your Twitter account, link images to the app and see a Pinterest-style wall of all the images (with masonry.js).  It also detects if an image is broken and gets replaced by a placeholder image.",image:{"background-image":"url(' images/fullStackProjects/pinterest-clone-app-project.jpg')"},source:"https://github.com/UlisesCabrera/pinterest-clone-fcc",live:"https://pin-yours.herokuapp.com/",userStories:["As an unauthenticated user, I can login with Twitter.","As an authenticated user, I can link to images.","As an authenticated user, I can delete images that I've linked to.","As an authenticated user, I can see a Pinterest-style wall of all the images I've linked to.","As an unauthenticated user, I can browse other users' walls of images.","As an authenticated user, if I upload an image that is broken, it will be replaced by a placeholder image."],school:"freeCodeCamp",date:"April 2016"},{name:"Manage a Book Trading App",description:"It's an app that allows you to catalogue your books online (just the image and name, not the actual book since it's not a real app), see all of the books the users own, request to borrow other users'books and easily manage books and request from your dashboard.  Built with the MEAN Stack using passport.js to support user authentication.",image:{"background-image":"url(' images/fullStackProjects/book-trading-app-project.jpg')"},source:"https://github.com/UlisesCabrera/book-trading-club",live:"https://book-trading-clb.herokuapp.com/",userStories:["I can update my settings to store my full name, city, and state.","I can view all books posted by every user.","I can add a new book.","I can propose a trade and wait for the other user to accept the trade."],school:"freeCodeCamp",date:"April 2016"},{name:"Chart the Stock Market App",description:"It's an app built to track market stocks, it uses socket.io to sync all clients connected built with the MEAN stack.  It lets the user add, remove and update stocks from the chart, any changes to the chart is view on every client connected. The data is coming from the Quandl financial API and the chart is built with the highchart library.",image:{"background-image":"url(' images/fullStackProjects/stock-watcher-project.jpg')"},source:"https://github.com/UlisesCabrera/the-stock-market-charts",live:"https://stock-w.herokuapp.com",post:"http://www.ulisescabrera.com/blog/2016/02/21/building-chart-the-stock-market/",userStories:["I can view a graph displaying the recent trend lines for each added stock.","I can add new stocks by their symbol name.","I can remove stocks.","I can see changes in real-time when any other user adds or removes a stock."],school:"freeCodeCamp",date:"February 2016"},{name:"Nightlife Coordination App",description:"It's an app to help users find the local bars using their current location or by searching on the map, it lets them add themselves to a list of 'People going'  and they can also remove themselves from the list. Keeping track of how many people are going to each bar will help the users decide where they want to go tonight. The app was built with the MEAN stack with the combination of the Yelp API to get the all the info for the local bars and using Google maps to display the location of each bar.",image:{"background-image":"url(' images/fullStackProjects/night-life-coord-project.jpg')"},source:"https://github.com/UlisesCabrera/nightlife-coordinator",live:"https://d-night-life.herokuapp.com/",post:"http://www.ulisescabrera.com/blog/2016/02/09/building-a-nightlife-coordination-app/",userStories:["As an unauthenticated user, I can view all bars in my area.","As an authenticated user, I can add myself to a bar to indicate I am going there tonight.","As an authenticated user, I can remove myself from a bar if I no longer want to go there.","As an unauthenticated user, when I login I should not have to search again."],school:"freeCodeCamp",date:"February 2016"},{name:"Voting App",description:"A dynamic app made with the MEAN (MongoDB, Express, Angular and Node) stack, using passport.js to handle the authentication process with local and social media accounts (Facebook, LinkedIn, Google+, Twitter and GitHub).  Mongoose was used to abstract the methods that interact with the MongoDB database and create schemas for the documents.  Each poll created can be shared to Facebook, Twitter and Google+ and the results are presented using Chart.js.",image:{"background-image":"url(' images/fullStackProjects/poll-app-project.jpg')"},source:"https://github.com/UlisesCabrera/voting-app",live:"https://poll-sation.herokuapp.com/",userStories:["As an authenticated user, I can keep my polls and come back later to access them.","As an authenticated user, I can share my polls with my friends.","As an authenticated user, I can see the aggregate results of my polls.","As an authenticated user, I can delete polls that I decide I don't want anymore.","As an authenticated user, I can create a poll with any number of possible items.","As an unauthenticated or authenticated user, I can see and vote on everyone's polls.","As an unauthenticated or authenticated user, I can see the results of polls in chart form. (This could be implemented using Chart.js or Google Charts.)","As an authenticated user, if I don't like the options on a poll, I can create a new option."],school:"freeCodeCamp",date:"December 2015"}]};return e}]),angular.module("MicroserviceModule").factory("microserviceFactory",[function(){var e={projects:[{name:"Timestamp",description:"A microservice where the user can pass a string as a parameter, and it will check to see whether that string contains either a unix timestamp or a natural language date (example: January 1, 2016). And if it does, it returns both the Unix timestamp and the natural language form of that date. If it does not contain a date or Unix timestamp, it returns null for those properties.",image:{background:"linear-gradient(rgba(0, 0, 0, 0.45), rgba(255,110,64, 0.45)), url(' images/microservices/timestamp-ms.jpg') no-repeat"},source:"https://github.com/UlisesCabrera/timestamp-ms-uc",live:"https://timestamp-ms-uc.herokuapp.com/",userStories:[],school:"freeCodeCamp",date:"January 2016"},{name:"Request Header Parser",description:"A microservice where the user can get the their IP address, language and operating system information",image:{background:"linear-gradient(rgba(0, 0, 0, 0.45), rgba(255,110,64, 0.45)), url(' images/microservices/request-header-parser-ms.jpg') no-repeat"},source:"https://github.com/UlisesCabrera/request-header-parser-ms",live:"https://request-header-parser-uc-ms.herokuapp.com/",userStories:[],school:"freeCodeCamp",date:"January 2016"},{name:"URL Shortener Microservice",description:"A microservice where the user can pass a URL as a parameter and it will receive a shortened URL in the JSON response, If it pass an invalid URL that doesn't follow the valid http://www.example.com format, the JSON response will contain an error instead. And when the user visits that shortened URL, it will redirect it to the original link.",image:{background:"linear-gradient(rgba(0, 0, 0, 0.45), rgba(255,110,64, 0.45)), url(' images/microservices/url-shortener-ms.jpg') no-repeat"},source:"https://github.com/UlisesCabrera/URL-Shortener-Microservice",live:"https://url-sh.herokuapp.com/",userStories:[],school:"freeCodeCamp",date:"January 2016"},{name:"Image Search Abstraction Layer",description:"A microservice where the user can get the image URLs, alt text and page urls for a set of images relating to a given search string, It can also paginate through the responses by adding a ?offset=2 parameter to the URL and can get a list of the most recently submitted search strings.",image:{background:"linear-gradient(rgba(0, 0, 0, 0.45), rgba(255,110,64, 0.45)), url(' images/microservices/image-search-abstraction-layer-ms.jpg') no-repeat"},source:"https://github.com/UlisesCabrera/Image-Search-Abstraction-Layer",live:"https://img-search-layer.herokuapp.com/",userStories:[],school:"freeCodeCamp",date:"January 2016"},{name:"File Metadata",description:"A microservice where the users can submit a FormData object that includes a file upload and when they submit something, it will receive the file size in bytes.",image:{background:"linear-gradient(rgba(0, 0, 0, 0.45), rgba(255,110,64, 0.45)), url(' images/microservices/file-metadata-ms.jpg') no-repeat"},source:"https://github.com/UlisesCabrera/File-Metadata-Microservice",live:"https://file-metadata-ms.herokuapp.com/",userStories:[],school:"freeCodeCamp",date:"January 2016"}]};return e}]),angular.module("AboutMeModule").controller("AboutMeController",["$scope","$location","aboutMeFactory",function(e,a,t){e.aboutMeInfo=t,e.projectsLabels=t.projects.projectsName,e.projectsData=t.projects.projectsCount,e.projectColors=randomColor({count:10,luminosity:"light"})}]),angular.module("FrontEndModule").controller("FrontEndController",["$scope","frontEndFactory",function(e,a){e.projects=a.projects,e.frameworkProjects={framework:"all"}}]),angular.module("FullStackModule").controller("FullStackController",["$scope","fullStackFactory",function(e,a){e.projects=a.projects}]),angular.module("HomePageModule").controller("HomePageController",["$scope","$location",function(e,a){e.current=function(){var e;switch(a.path()){case"/":e="fullStack";break;case"/frontEnd":e="frontEnd";break;case"/post":e="post";break;case"/microservice":e="microservice";break;case"/aboutMe":e="aboutMe";break;default:e="fullStack"}return e}}]),angular.module("MicroserviceModule").controller("MicroserviceController",["$scope","microserviceFactory",function(e,a){e.projects=a.projects}]),angular.module("FrontEndModule").filter("filterByFramework",function(){return function(e,a){var t=[];return"all"===a?t=e:(angular.forEach(e,function(e){e.primaryFramework===a&&t.push(e)}),t)}}),angular.module("2016-Portfolio",["HomePageModule","ngRoute","FullStackModule","FrontEndModule","AboutMeModule","MicroserviceModule"]).config(["$routeProvider","$locationProvider",function(e,a){e.when("/",{templateUrl:"./partials/fullstack.html",controller:"FullStackController"}).when("/frontEnd",{templateUrl:"./partials/frontEnd.html",controller:"FrontEndController"}).when("/microservice",{templateUrl:"./partials/microservice.html",controller:"MicroserviceController"}).when("/aboutMe",{templateUrl:"./partials/aboutMe.html",controller:"AboutMeController"}).otherwise({redirectTo:"/"})}]);